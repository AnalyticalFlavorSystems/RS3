require(Rcpp)
sourceCpp("s3.cpp")
sourceCpp("s3.cpp")
sourceCpp("s3.cpp")
sourceCpp("s3.cpp")
sourceCpp("s3.cpp")
sourceCpp("s3.cpp")
sourceCpp("s3.cpp")
sourceCpp("s3.cpp")
sourceCpp("s3.cpp")
sourceCpp("s3.cpp",verbose=TRUE)
q()
dyn.load("s3.so")
sourceCpp("s3.cpp")
q()
dyn.load("s3.so")
dyn.load("s3.so")
dyn.load("s3.so")
dyn.load("s3.so")
q()
dyn.load("s3.so")
q()
dyn.load("s3.so")
q()
Sys.setenv("PKG_CXXFLAGS"="-fopenmp")
Sys.setenv("PKG_LIBS"="-fopenmp")
q()
Rcpp.package.skeleton("LibS3",cpp_files=c("libs3.h"))
require(Rcpp)
Rcpp.package.skeleton("LibS3",cpp_files=c("libs3.h"))
ls
q()
require(Rcpp)
Rcpp.package.skeleton("LibS3",example_code=FALSE,cpp_files=c("libs3.h"))
vignette("Rcpp-attributes")
q()
q
q()
require(devtools)
dev_mode()
install(LibS3)
install("LibS3")
q()
require(devtools)
require(Rcpp)
dny.load("s3.so")
dyn.load("s3.so")
dyn.load("s3.so",verbose=TRUE)
sourceCpp("s3.cpp",verbose=TRUE)
dyn.load("s3.so",verbose=TRUE)
sourceCpp("s3.cpp",verbose=TRUE)
q()
dyn.load("s3.so")
dyn.load("s3.so")
q()
require(Rcpp)
q()
